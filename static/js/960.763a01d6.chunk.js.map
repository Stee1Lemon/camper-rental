{"version":3,"file":"static/js/960.763a01d6.chunk.js","mappings":"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","sources":["components/CheckBox/CheckBox.styled.jsx","components/CheckBox/index.jsx","components/CatalogFilter/CatalogFilter.styled.jsx","components/CatalogFilter/index.jsx","components/Catalog/Catalog.styled.jsx","components/Catalog/index.jsx","pages/CatalogPage/index.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckInput = styled.input`\r\n  appearance: none;\r\n`;\r\n\r\nexport const CheckLabel = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  min-width: 95px;\r\n  max-width: 120px;\r\n  height: 95px;\r\n  padding: 17px 17px;\r\n  border-radius: 10px;\r\n  border: 1px solid var(--border-color);\r\n\r\n  cursor: pointer;\r\n\r\n  ${CheckInput}:checked + & {\r\n    border: 2px solid var(--third-color);\r\n  }\r\n`;\r\n\r\nexport const Image = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  svg {\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n`;\r\n","import { CheckInput, CheckLabel, Image } from './CheckBox.styled';\r\nimport image from 'assets/icons.svg';\r\n\r\nconst CheckBoxInput = ({ name, value, icon, onChange }) => {\r\n  return (\r\n    <>\r\n      <CheckInput\r\n        type=\"checkbox\"\r\n        id={value}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <CheckLabel htmlFor={value}>\r\n        <Image>\r\n          <svg>\r\n            <use xlinkHref={`${image}#icon-${icon}`} />\r\n          </svg>\r\n        </Image>\r\n        {value}\r\n      </CheckLabel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckBoxInput;\r\n","import { Button, Input } from 'components/CommonElements';\r\nimport styled from 'styled-components';\r\n\r\nexport const FormField = styled.form`\r\n  max-height: 747px;\r\n  position: sticky;\r\n  top: 30px;\r\n`;\r\n\r\nexport const FilterNameField = styled.p`\r\n  line-height: 1.5;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  color: var(--second-color);\r\n`;\r\n\r\nexport const LocationInput = styled(Input)`\r\n  margin-top: 8px;\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nexport const FilterType = styled.p`\r\n  margin-top: 14px;\r\n  margin-bottom: 24px;\r\n\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 1.2;\r\n  color: var(--first-color);\r\n`;\r\n\r\nexport const CheckBoxField = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  padding-top: 24px;\r\n  max-width: 360px;\r\n  border-top: 1px solid var(--second-color);\r\n`;\r\n\r\nexport const SearchButton = styled(Button)`\r\n  margin-top: 64px;\r\n`;\r\n","import CheckBoxInput from 'components/CheckBox';\r\nimport {\r\n  CheckBoxField,\r\n  FilterNameField,\r\n  FilterType,\r\n  FormField,\r\n  LocationInput,\r\n  SearchButton,\r\n} from './CatalogFilter.styled';\r\nimport { useState } from 'react';\r\n\r\nconst equipment = [\r\n  { name: 'equipment', value: 'AC', icon: 'ac', checked: false },\r\n  { name: 'equipment', value: 'Automatic', icon: 'automatic', checked: false },\r\n  { name: 'equipment', value: 'Kitchen', icon: 'kitchen', checked: false },\r\n  { name: 'equipment', value: 'TV', icon: 'TV', checked: false },\r\n  { name: 'equipment', value: 'Shower/WC', icon: 'shower', checked: false },\r\n];\r\n\r\nconst vehicleType = [\r\n  { name: 'vehicle-type', value: 'Van', icon: 'van', checked: false },\r\n  {\r\n    name: 'vehicle-type',\r\n    value: 'Fully Integrated',\r\n    icon: 'fully-integrated',\r\n    checked: false,\r\n  },\r\n  { name: 'vehicle-type', value: 'Alcove', icon: 'alcove', checked: false },\r\n];\r\n\r\nconst CatalogFilter = () => {\r\n  const [location, setLocation] = useState('');\r\n  const [equipmentOptions, setEquipmentOptions] = useState(equipment);\r\n  const [vehicleTypeOptions, setVehicleTypeOptions] = useState(vehicleType);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkedEquipmentOptions = equipmentOptions\r\n      .filter((option) => option.checked)\r\n      .map((option) => ({ name: option.name, value: option.value }));\r\n    const checkedVehicleTypeOptions = vehicleTypeOptions\r\n      .filter((option) => option.checked)\r\n      .map((option) => ({ name: option.name, value: option.value }));\r\n\r\n    const toSearch = [\r\n      location,\r\n      ...checkedEquipmentOptions,\r\n      ...checkedVehicleTypeOptions,\r\n    ];\r\n    console.log(toSearch);\r\n  };\r\n\r\n  const handleChangeEquipment = (value) => {\r\n    setEquipmentOptions((prevEquipmentOptions) =>\r\n      prevEquipmentOptions.map((option) =>\r\n        option.value === value\r\n          ? { ...option, checked: !option.checked }\r\n          : option\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleChangeVehicleType = (value) => {\r\n    setVehicleTypeOptions((prevEquipmentOptions) =>\r\n      prevEquipmentOptions.map((option) =>\r\n        option.value === value\r\n          ? { ...option, checked: !option.checked }\r\n          : option\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormField>\r\n      <FilterNameField>Location</FilterNameField>\r\n      <LocationInput\r\n        type=\"text\"\r\n        placeholder=\"Kyiv, Ukraine\"\r\n        value={location}\r\n        onChange={(e) => setLocation(e.target.value)}\r\n      />\r\n      <FilterNameField>Filters</FilterNameField>\r\n      <FilterType>Vehicle equipment</FilterType>\r\n      <CheckBoxField>\r\n        {equipmentOptions.map((item) => (\r\n          <CheckBoxInput\r\n            name={item.name}\r\n            value={item.value}\r\n            icon={item.icon}\r\n            checked={item.checked}\r\n            onChange={() => handleChangeEquipment(item.value)}\r\n          />\r\n        ))}\r\n      </CheckBoxField>\r\n      <FilterType>Vehicle type</FilterType>\r\n      <CheckBoxField>\r\n        {vehicleTypeOptions.map((item) => (\r\n          <CheckBoxInput\r\n            name={item.name}\r\n            value={item.value}\r\n            icon={item.icon}\r\n            checked={item.checked}\r\n            onChange={() => handleChangeVehicleType(item.value)}\r\n          />\r\n        ))}\r\n      </CheckBoxField>\r\n      <SearchButton type=\"submit\" onClick={handleSubmit}>\r\n        Search\r\n      </SearchButton>\r\n    </FormField>\r\n  );\r\n};\r\n\r\nexport default CatalogFilter;\r\n","import { Button } from 'components/CommonElements';\r\nimport styled from 'styled-components';\r\n\r\nexport const CatalogField = styled.div`\r\n  display: flex;\r\n  gap: 64px;\r\n`;\r\nexport const VehicleCardsField = styled.div``;\r\n\r\nexport const LoadMoreButton = styled(Button)`\r\n  margin: 0 40%;\r\n  color: var(--first-color);\r\n  background-color: var(--white-color);\r\n  border: 1px solid var(--border-color);\r\n`;\r\n","import { Container } from 'components/CommonElements';\r\nimport VehicleCard from 'components/VehicleCard';\r\nimport CatalogFilter from 'components/CatalogFilter';\r\nimport {\r\n  CatalogField,\r\n  LoadMoreButton,\r\n  VehicleCardsField,\r\n} from './Catalog.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport campervanApi from 'reduxApp/root/rootOperations';\r\nimport { selectCampervan } from 'reduxApp/root/rootSelector';\r\nimport { useEffect, useState } from 'react';\r\n\r\nlet currentPage = 1;\r\n\r\nconst Catalog = () => {\r\n  const [loadMoreButton, setLoadMoreButton] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const vans = useSelector(selectCampervan);\r\n\r\n  const handleClick = async () => {\r\n    currentPage++;\r\n    const { payload } = await dispatch(\r\n      campervanApi.getCampervanThunk({ page: currentPage })\r\n    );\r\n    if (payload.length < 4) setLoadMoreButton(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (vans.length !== 0) return;\r\n    dispatch(campervanApi.getCampervanThunk({ page: 1 }));\r\n  }, [vans.length, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <CatalogField>\r\n        <CatalogFilter />\r\n        <VehicleCardsField>\r\n          {vans.map((van) => {\r\n            return <VehicleCard key={van._id} info={van} />;\r\n          })}\r\n        </VehicleCardsField>\r\n      </CatalogField>\r\n      {loadMoreButton ? (\r\n        <LoadMoreButton onClick={handleClick}>Load more</LoadMoreButton>\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n","import Catalog from 'components/Catalog';\r\n\r\nconst CatalogPage = () => {\r\n  return (\r\n    <section>\r\n      <Catalog />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CatalogPage;\r\n"],"names":["CheckInput","styled","input","_templateObject","_taggedTemplateLiteral","CheckLabel","label","_templateObject2","Image","div","_templateObject3","_ref","name","value","icon","onChange","_jsxs","_Fragment","children","_jsx","type","id","htmlFor","xlinkHref","concat","image","FormField","form","FilterNameField","p","LocationInput","Input","FilterType","_templateObject4","CheckBoxField","_templateObject5","SearchButton","Button","_templateObject6","equipment","checked","vehicleType","CatalogFilter","location","setLocation","useState","equipmentOptions","setEquipmentOptions","vehicleTypeOptions","setVehicleTypeOptions","placeholder","e","target","map","item","CheckBoxInput","handleChangeEquipment","prevEquipmentOptions","option","handleChangeVehicleType","onClick","preventDefault","checkedEquipmentOptions","filter","checkedVehicleTypeOptions","toSearch","console","log","CatalogField","VehicleCardsField","LoadMoreButton","currentPage","Catalog","loadMoreButton","setLoadMoreButton","dispatch","useDispatch","vans","useSelector","selectCampervan","useEffect","length","campervanApi","getCampervanThunk","page","Container","van","VehicleCard","info","_id","async","payload","CatalogPage"],"sourceRoot":""}